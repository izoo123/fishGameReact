{"ast":null,"code":"var _jsxFileName = \"/home/gavin/Desktop/Various tutorials and projects/fishgamereact/src/FishContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const FishContext = createContext();\n\nclass FishContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fishCount: 0,\n      fps: 0,\n      fpc: 1,\n      structures: {}\n    };\n\n    this.devFishCount = () => {\n      this.setState({\n        fishCount: 100000000000\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState(prevState => {\n        return {\n          fishCount: prevState.fishCount + prevState.fpc\n        };\n      });\n    };\n\n    this.handleStructureBuy = structure => {\n      if (this.state.fishCount >= structure.price) {\n        this.setState(prevState => {\n          return {\n            fishCount: prevState.fishCount - structure.price\n          };\n        });\n      }\n    };\n\n    this.getStructures = structures => {\n      this.setState({\n        structures: structures\n      });\n    };\n\n    this.handleFishUpdate = structures => {\n      this.setState(prevState => {\n        return {\n          fishCount: Math.round((prevState.fishCount + prevState.fps / 10) * 10) / 10 //((Math.round(prevState.fishCount + (prevState.fps)/10)) * 10)/10\n          //prevState.fishCount + (prevState.fps)/10\n\n        };\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.structures !== prevState.structures) {\n      this.setState({\n        fps: this.state.structures.fishPole.fps * this.state.structures.fishPole.amount + this.state.structures.net.fps * this.state.structures.net.amount + this.state.structures.boat.fps * this.state.structures.boat.amount + this.state.structures.crew.fps * this.state.structures.crew.amount + this.state.structures.yacht.fps * this.state.structures.yacht.amount + this.state.structures.factory.fps * this.state.structures.factory.amount + this.state.structures.portal.fps * this.state.structures.portal.amount\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.handleFishUpdate(this.state), 100);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(FishContext.Provider, {\n      value: { ...this.state,\n        handleClick: this.handleClick,\n        handleStructureBuy: this.handleStructureBuy,\n        handleFishUpdate: this.handleFishUpdate,\n        getStructures: this.getStructures,\n        devFishCount: this.devFishCount\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default FishContextProvider;","map":{"version":3,"sources":["/home/gavin/Desktop/Various tutorials and projects/fishgamereact/src/FishContext.js"],"names":["React","createContext","Component","FishContext","FishContextProvider","state","fishCount","fps","fpc","structures","devFishCount","setState","handleClick","prevState","handleStructureBuy","structure","price","getStructures","handleFishUpdate","Math","round","componentDidUpdate","prevProps","fishPole","amount","net","boat","crew","yacht","factory","portal","componentDidMount","interval","setInterval","render","props","children"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from 'react'\n\nexport const FishContext = createContext()\n\nclass FishContextProvider extends Component {\n\n    state = {  \n        fishCount: 0,\n        fps: 0,\n        fpc: 1,\n        structures: {}\n    }\n\n    devFishCount = () => {\n        this.setState({\n            fishCount: 100000000000\n        })\n    }\n\n    handleClick = () => {\n        this.setState( prevState => {\n            return {fishCount: prevState.fishCount + prevState.fpc}\n        })\n    }\n    \n    handleStructureBuy = (structure) => {\n        if (this.state.fishCount >= structure.price) {\n            this.setState( prevState => {\n                return {\n                    fishCount: prevState.fishCount - structure.price\n                }\n            })\n        }\n\n    }\n\n    getStructures = (structures) => {\n        this.setState({\n            structures: structures\n        })\n    }\n\n    //for some reason when I make the fishcount round to the nearest tenth it stop at certain numbers 2.3 etc\n    //I dont understand why but if I dont do this it is a very long decimal with a lot of 9s\n    handleFishUpdate = (structures) => {\n        this.setState( prevState => {\n            return {\n                fishCount: (Math.round((prevState.fishCount + (prevState.fps)/10) * 10))/10\n                //((Math.round(prevState.fishCount + (prevState.fps)/10)) * 10)/10\n                //prevState.fishCount + (prevState.fps)/10\n            }\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.structures !== prevState.structures) {\n            this.setState({\n                fps: this.state.structures.fishPole.fps * this.state.structures.fishPole.amount +\n                     this.state.structures.net.fps * this.state.structures.net.amount +\n                     this.state.structures.boat.fps * this.state.structures.boat.amount +\n                     this.state.structures.crew.fps * this.state.structures.crew.amount +\n                     this.state.structures.yacht.fps * this.state.structures.yacht.amount +\n                     this.state.structures.factory.fps * this.state.structures.factory.amount +\n                     this.state.structures.portal.fps * this.state.structures.portal.amount \n                     \n            })\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.handleFishUpdate(this.state), 100)\n      }\n\n    render() { \n        return (  \n            <FishContext.Provider value={{ ...this.state, handleClick: this.handleClick, \n                handleStructureBuy: this.handleStructureBuy, handleFishUpdate: this.handleFishUpdate,\n                getStructures: this.getStructures, devFishCount: this.devFishCount }}>\n                {this.props.children}\n            </FishContext.Provider>\n        )\n    }\n}\n \nexport default FishContextProvider "]},"metadata":{},"sourceType":"module"}
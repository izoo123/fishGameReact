{"ast":null,"code":"var _jsxFileName = \"/home/gavin/Desktop/Various tutorials and projects/fishgamereact/src/components/StructureStore.js\";\nimport React, { Component } from 'react';\nimport StructureStoreDisplay from './StructureStoreDisplay';\nimport { FishContext } from '../FishContext';\n\nclass StructureStore extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fishPole: {\n        price: 50,\n        fps: 0.5,\n        amount: 0\n      },\n      net: {\n        price: 300,\n        fps: 2,\n        amount: 0\n      },\n      boat: {\n        price: 2500,\n        fps: 15,\n        amount: 0\n      },\n      crew: {\n        price: 21000,\n        fps: 120,\n        amount: 0\n      },\n      yacht: {\n        price: 180000,\n        fps: 900,\n        amount: 0\n      },\n      factory: {\n        price: 1000000,\n        fps: 8000,\n        amount: 0\n      },\n      portal: {\n        price: 10000000,\n        fps: 70000,\n        amount: 0\n      }\n    };\n\n    this.handleClick = event => {\n      const {\n        getStructures,\n        handleStructureBuy,\n        fishCount\n      } = this.context;\n      const {\n        name\n      } = event.target;\n      handleStructureBuy(this.state[name]);\n\n      if (fishCount >= this.state[name].price) {\n        this.setState(prevState => {\n          return {\n            [name]: {\n              price: prevState[name].price * 1.2,\n              fps: prevState[name].fps,\n              amount: prevState[name].amount + 1\n            }\n          };\n        }, () => {\n          getStructures(this.state);\n        });\n      }\n    };\n\n    this.test = () => {\n      const {\n        devFishCount\n      } = this.context;\n      devFishCount();\n      console.log(this.state);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      handleFishUpdate\n    } = this.context;\n    this.interval = setInterval(() => handleFishUpdate(this.state), 100);\n  } // Im having an issue where the first buy doesnt result in a getStructures being called after the buy. \n  // this was because setState is non synchronis so I used the callback function on setState to make this work.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StructureStoreDisplay, {\n      state: this.state,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \" Test \"));\n  }\n\n}\n\nStructureStore.contextType = FishContext;\nexport default StructureStore;","map":{"version":3,"sources":["/home/gavin/Desktop/Various tutorials and projects/fishgamereact/src/components/StructureStore.js"],"names":["React","Component","StructureStoreDisplay","FishContext","StructureStore","state","fishPole","price","fps","amount","net","boat","crew","yacht","factory","portal","handleClick","event","getStructures","handleStructureBuy","fishCount","context","name","target","setState","prevState","test","devFishCount","console","log","componentDidMount","handleFishUpdate","interval","setInterval","render","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport StructureStoreDisplay from './StructureStoreDisplay'\nimport { FishContext } from '../FishContext'\n\nclass StructureStore extends Component { \n  state = {\n    fishPole: {\n      price: 50,\n      fps: 0.5,\n      amount: 0\n    },\n    net: {\n      price: 300,\n      fps: 2,\n      amount: 0\n    },\n    boat: {\n      price: 2500,\n      fps: 15,\n      amount: 0\n    },\n    crew: {\n      price: 21000,\n      fps: 120,\n      amount: 0\n    },\n    yacht: {\n      price: 180000,\n      fps: 900,\n      amount: 0\n    },\n    factory: {\n      price: 1000000,\n      fps: 8000,\n      amount: 0\n    },\n    portal: {\n      price: 10000000,\n      fps: 70000,\n      amount: 0\n    }\n  }\n\n  static contextType = FishContext\n\n  componentDidMount() {\n    const { handleFishUpdate } = this.context\n\n    this.interval = setInterval(() => handleFishUpdate(this.state), 100)\n  }\n\n  // Im having an issue where the first buy doesnt result in a getStructures being called after the buy. \n  // this was because setState is non synchronis so I used the callback function on setState to make this work.\n  handleClick = (event) => {\n    const { getStructures, handleStructureBuy, fishCount } = this.context\n    const { name } = event.target\n\n    handleStructureBuy(this.state[name])\n\n    if ( fishCount >= this.state[name].price ) {\n      this.setState( prevState => {\n        return { [name]: {\n          price: prevState[name].price * 1.2,\n          fps: prevState[name].fps,\n          amount: prevState[name].amount + 1\n        }}\n      }, () => { getStructures(this.state) } )\n    }\n\n  }\n\n  test = () => {\n    const { devFishCount } = this.context\n\n    devFishCount()\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <div>\n        <StructureStoreDisplay state={this.state} handleClick={this.handleClick} />\n        <button onClick={this.test}> Test </button>\n      </div>\n    )\n  }\n}\n\nexport default StructureStore\n"]},"metadata":{},"sourceType":"module"}